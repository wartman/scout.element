package scout.element;

import js.html.Element;
import scout.html.Api;
import scout.html.TemplateResult;

@:autoBuild(scout.element.macro.ElementBuilder.build())
class ScoutElement /* extends Element */ {

  final renderRoot:Element;

  // public function new() {
  //   super();
  //   renderRoot = cast createRenderRoot();
  // }

  /////// Temp ///////

  final __proxy:Element;

  public function new(__proxy:Element, renderRoot:Element) {
    this.__proxy = __proxy;
    this.renderRoot = renderRoot;
  }

  public function remove() {
    __proxy.remove();
  }

  public function getAttribute(name:String) {
    return __proxy.getAttribute(name);
  }
  
  public function setAttribute(name:String, value:Dynamic) {
    __proxy.setAttribute(name, value);
  }

  public function querySelector(sel:String) {
    return __proxy.querySelector(sel);
  }

  public function querySelectorAll(sel:String) {
    return __proxy.querySelectorAll(sel);
  }

  /////// Temp ///////

  public function connectedCallback() {
    initilaize();
  }

  function initilaize() {
    gatherAttributes();
    update();
  }

  function gatherAttributes() {
    // generated by macro
  }

  function shouldRender() {
    return true;
  }

  public function update() {
    if (!shouldRender()) return;
    var result = render();
    if (result != null) {
      Api.render(result, renderRoot);
    }
  }

  public function render():Null<TemplateResult> {
    return null;
  }

  // function createRenderRoot() {
  //   return attachShadow({ mode: 'open' });
  // }

}
